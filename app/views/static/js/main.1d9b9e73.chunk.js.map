{"version":3,"sources":["actions/types.js","services/auth.service.js","components/login.component.js","actions/auth.js","components/register.component.js","services/auth-header.js","services/user.service.js","components/home.component.js","components/profile.component.js","components/board-user.component.js","components/board-moderator.component.js","components/board-admin.component.js","helpers/history.js","App.js","actions/message.js","reportWebVitals.js","reducers/auth.js","reducers/message.js","reducers/index.js","store.js","index.js"],"names":["REGISTER_SUCCESS","REGISTER_FAIL","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT","SET_MESSAGE","CLEAR_MESSAGE","arr","window","location","href","split","result","API_URL","username","password","axios","post","then","response","data","accessToken","localStorage","setItem","JSON","stringify","removeItem","email","required","value","className","role","Login","props","handleLogin","bind","onChangeUsername","onChangePassword","state","loading","e","this","setState","target","preventDefault","form","validateAll","dispatch","history","checkBtn","context","_errors","length","AuthService","login","type","payload","user","Promise","resolve","error","message","toString","reject","push","reload","catch","isLoggedIn","to","src","alt","onSubmit","ref","c","htmlFor","name","onChange","validations","disabled","style","display","Component","connect","auth","isEmail","vusername","vpassword","Register","handleRegister","onChangeEmail","successful","register","authHeader","parse","getItem","get","headers","Home","content","UserService","getPublicContent","Profile","currentUser","substring","substr","id","roles","map","index","Pylbs","class","BoardUser","getUserBoard","getModeratorBoard","getAdminBoard","createBrowserHistory","App","logOut","showModeratorBoard","showAdminBoard","undefined","listen","includes","logout","onClick","exact","path","component","BoardModerator","BoardAdmin","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","combineReducers","action","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1d9b9e73.chunk.js","sourcesContent":["export const REGISTER_SUCCESS = \"REGISTER_SUCCESS\";\nexport const REGISTER_FAIL = \"REGISTER_FAIL\";\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\nexport const LOGIN_FAIL = \"LOGIN_FAIL\";\nexport const LOGOUT = \"LOGOUT\";\n\nexport const SET_MESSAGE = \"SET_MESSAGE\";\nexport const CLEAR_MESSAGE = \"CLEAR_MESSAGE\";","import axios from \"axios\";\n\nvar url = window.location.href\nvar arr = url.split(\"/\");\narr[2] = arr[2] === 'localhost:3000' ? 'localhost:8080' : arr[2];\nvar result = arr[0] + \"//\" + arr[2];\n\nconst API_URL = `${result}/api/auth/`;\n\nclass AuthService {\n  login(username, password) {\n    return axios\n      .post(API_URL + \"signin\", { username, password })\n      .then((response) => {\n        if (response.data.accessToken) {\n          localStorage.setItem(\"user\", JSON.stringify(response.data));\n        }\n\n        return response.data;\n      });\n  }\n\n  logout() {\n    localStorage.removeItem(\"user\");\n  }\n\n  register(username, email, password) {\n    return axios.post(API_URL + \"signup\", {\n      username,\n      email,\n      password,\n    });\n  }\n}\n\nexport default new AuthService();","import React, { Component } from \"react\";\nimport { Redirect } from 'react-router-dom';\n\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport CheckButton from \"react-validation/build/button\";\n\nimport { connect } from \"react-redux\";\nimport { login } from \"../actions/auth\";\n\nconst required = (value) => {\n  if (!value) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        This field is required!\n      </div>\n    );\n  }\n};\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.handleLogin = this.handleLogin.bind(this);\n    this.onChangeUsername = this.onChangeUsername.bind(this);\n    this.onChangePassword = this.onChangePassword.bind(this);\n\n    this.state = {\n      username: \"\",\n      password: \"\",\n      loading: false,\n    };\n  }\n\n  onChangeUsername(e) {\n    this.setState({\n      username: e.target.value,\n    });\n  }\n\n  onChangePassword(e) {\n    this.setState({\n      password: e.target.value,\n    });\n  }\n\n  handleLogin(e) {\n    e.preventDefault();\n\n    this.setState({\n      loading: true,\n    });\n\n    this.form.validateAll();\n\n    const { dispatch, history } = this.props;\n\n    if (this.checkBtn.context._errors.length === 0) {\n      dispatch(login(this.state.username, this.state.password))\n        .then(() => {\n          history.push(\"/profile\");\n          window.location.reload();\n        })\n        .catch(() => {\n          this.setState({\n            loading: false\n          });\n        });\n    } else {\n      this.setState({\n        loading: false,\n      });\n    }\n  }\n\n  render() {\n    const { isLoggedIn, message } = this.props;\n\n    if (isLoggedIn) {\n      return <Redirect to=\"/profile\" />;\n    }\n\n    return (\n      <div className=\"col-md-12\">\n        <div className=\"card card-container\">\n          <img\n            src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\n            alt=\"profile-img\"\n            className=\"profile-img-card\"\n          />\n\n          <Form\n            onSubmit={this.handleLogin}\n            ref={(c) => {\n              this.form = c;\n            }}\n          >\n            <div className=\"form-group\">\n              <label htmlFor=\"username\">Username</label>\n              <Input\n                type=\"text\"\n                className=\"form-control\"\n                name=\"username\"\n                value={this.state.username}\n                onChange={this.onChangeUsername}\n                validations={[required]}\n              />\n            </div>\n\n            <div className=\"form-group\">\n              <label htmlFor=\"password\">Password</label>\n              <Input\n                type=\"password\"\n                className=\"form-control\"\n                name=\"password\"\n                value={this.state.password}\n                onChange={this.onChangePassword}\n                validations={[required]}\n              />\n            </div>\n\n            <div className=\"form-group\">\n              <button\n                className=\"btn btn-primary btn-block\"\n                disabled={this.state.loading}\n              >\n                {this.state.loading && (\n                  <span className=\"spinner-border spinner-border-sm\"></span>\n                )}\n                <span>Login</span>\n              </button>\n            </div>\n\n            {message && (\n              <div className=\"form-group\">\n                <div className=\"alert alert-danger\" role=\"alert\">\n                  {message}\n                </div>\n              </div>\n            )}\n            <CheckButton\n              style={{ display: \"none\" }}\n              ref={(c) => {\n                this.checkBtn = c;\n              }}\n            />\n          </Form>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  const { isLoggedIn } = state.auth;\n  const { message } = state.message;\n  return {\n    isLoggedIn,\n    message\n  };\n}\n\nexport default connect(mapStateToProps)(Login);","import {\n    REGISTER_SUCCESS,\n    REGISTER_FAIL,\n    LOGIN_SUCCESS,\n    LOGIN_FAIL,\n    LOGOUT,\n    SET_MESSAGE,\n  } from \"./types\";\n  \n  import AuthService from \"../services/auth.service\";\n  \n  export const register = (username, email, password) => (dispatch) => {\n    return AuthService.register(username, email, password).then(\n      (response) => {\n        dispatch({\n          type: REGISTER_SUCCESS,\n        });\n  \n        dispatch({\n          type: SET_MESSAGE,\n          payload: response.data.message,\n        });\n  \n        return Promise.resolve();\n      },\n      (error) => {\n        const message =\n          (error.response &&\n            error.response.data &&\n            error.response.data.message) ||\n          error.message ||\n          error.toString();\n  \n        dispatch({\n          type: REGISTER_FAIL,\n        });\n  \n        dispatch({\n          type: SET_MESSAGE,\n          payload: message,\n        });\n  \n        return Promise.reject();\n      }\n    );\n  };\n  \n  export const login = (username, password) => (dispatch) => {\n    return AuthService.login(username, password).then(\n      (data) => {\n        dispatch({\n          type: LOGIN_SUCCESS,\n          payload: { user: data },\n        });\n  \n        return Promise.resolve();\n      },\n      (error) => {\n        const message =\n          (error.response &&\n            error.response.data &&\n            error.response.data.message) ||\n          error.message ||\n          error.toString();\n  \n        dispatch({\n          type: LOGIN_FAIL,\n        });\n  \n        dispatch({\n          type: SET_MESSAGE,\n          payload: message,\n        });\n  \n        return Promise.reject();\n      }\n    );\n  };\n  \n  export const logout = () => (dispatch) => {\n    AuthService.logout();\n  \n    dispatch({\n      type: LOGOUT,\n    });\n  };  ","import React, { Component } from \"react\";\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport CheckButton from \"react-validation/build/button\";\nimport { isEmail } from \"validator\";\n\nimport { connect } from \"react-redux\";\nimport { register } from \"../actions/auth\";\n\nconst required = (value) => {\n  if (!value) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        This field is required!\n      </div>\n    );\n  }\n};\n\nconst email = (value) => {\n  if (!isEmail(value)) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        This is not a valid email.\n      </div>\n    );\n  }\n};\n\nconst vusername = (value) => {\n  if (value.length < 3 || value.length > 20) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        The username must be between 3 and 20 characters.\n      </div>\n    );\n  }\n};\n\nconst vpassword = (value) => {\n  if (value.length < 6 || value.length > 40) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        The password must be between 6 and 40 characters.\n      </div>\n    );\n  }\n};\n\nclass Register extends Component {\n  constructor(props) {\n    super(props);\n    this.handleRegister = this.handleRegister.bind(this);\n    this.onChangeUsername = this.onChangeUsername.bind(this);\n    this.onChangeEmail = this.onChangeEmail.bind(this);\n    this.onChangePassword = this.onChangePassword.bind(this);\n\n    this.state = {\n      username: \"\",\n      email: \"\",\n      password: \"\",\n      successful: false,\n    };\n  }\n\n  onChangeUsername(e) {\n    this.setState({\n      username: e.target.value,\n    });\n  }\n\n  onChangeEmail(e) {\n    this.setState({\n      email: e.target.value,\n    });\n  }\n\n  onChangePassword(e) {\n    this.setState({\n      password: e.target.value,\n    });\n  }\n\n  handleRegister(e) {\n    e.preventDefault();\n\n    this.setState({\n      successful: false,\n    });\n\n    this.form.validateAll();\n\n    if (this.checkBtn.context._errors.length === 0) {\n      this.props\n        .dispatch(\n          register(this.state.username, this.state.email, this.state.password)\n        )\n        .then(() => {\n          this.setState({\n            successful: true,\n          });\n        })\n        .catch(() => {\n          this.setState({\n            successful: false,\n          });\n        });\n    }\n  }\n\n  render() {\n    const { message } = this.props;\n\n    return (\n      <div className=\"col-md-12\">\n        <div className=\"card card-container\">\n          <img\n            src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\n            alt=\"profile-img\"\n            className=\"profile-img-card\"\n          />\n\n          <Form\n            onSubmit={this.handleRegister}\n            ref={(c) => {\n              this.form = c;\n            }}\n          >\n            {!this.state.successful && (\n              <div>\n                <div className=\"form-group\">\n                  <label htmlFor=\"username\">Username</label>\n                  <Input\n                    type=\"text\"\n                    className=\"form-control\"\n                    name=\"username\"\n                    value={this.state.username}\n                    onChange={this.onChangeUsername}\n                    validations={[required, vusername]}\n                  />\n                </div>\n\n                <div className=\"form-group\">\n                  <label htmlFor=\"email\">Email</label>\n                  <Input\n                    type=\"text\"\n                    className=\"form-control\"\n                    name=\"email\"\n                    value={this.state.email}\n                    onChange={this.onChangeEmail}\n                    validations={[required, email]}\n                  />\n                </div>\n\n                <div className=\"form-group\">\n                  <label htmlFor=\"password\">Password</label>\n                  <Input\n                    type=\"password\"\n                    className=\"form-control\"\n                    name=\"password\"\n                    value={this.state.password}\n                    onChange={this.onChangePassword}\n                    validations={[required, vpassword]}\n                  />\n                </div>\n\n                <div className=\"form-group\">\n                  <button className=\"btn btn-primary btn-block\">Sign Up</button>\n                </div>\n              </div>\n            )}\n\n            {message && (\n              <div className=\"form-group\">\n                <div className={ this.state.successful ? \"alert alert-success\" : \"alert alert-danger\" } role=\"alert\">\n                  {message}\n                </div>\n              </div>\n            )}\n            <CheckButton\n              style={{ display: \"none\" }}\n              ref={(c) => {\n                this.checkBtn = c;\n              }}\n            />\n          </Form>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  const { message } = state.message;\n  return {\n    message,\n  };\n}\n\nexport default connect(mapStateToProps)(Register);","export default function authHeader() {\n    const user = JSON.parse(localStorage.getItem('user'));\n    \n    if (user && user.accessToken) {\n      //return { Authorization: 'Bearer ' + user.accessToken };\n      return { 'x-access-token': user.accessToken };\n    } else {\n      return {};\n    }\n  }","import axios from 'axios';\nimport authHeader from './auth-header';\n\nvar url = window.location.href\nvar arr = url.split(\"/\");\narr[2] = arr[2] === 'localhost:3000' ? 'localhost:8080' : arr[2];\nvar result = arr[0] + \"//\" + arr[2];\n\nconst API_URL = `${result}/api/test/`;\n\nclass UserService {\n  getPublicContent() {\n    return axios.get(API_URL + 'all');\n  }\n\n  getUserBoard() {\n    return axios.get(API_URL + 'user', { headers: authHeader() });\n  }\n\n  getModeratorBoard() {\n    return axios.get(API_URL + 'mod', { headers: authHeader() });\n  }\n\n  getAdminBoard() {\n    return axios.get(API_URL + 'admin', { headers: authHeader() });\n  }\n}\n\nexport default new UserService();","import React, { Component } from \"react\";\nimport parse from \"html-react-parser\";\n\nimport UserService from \"../services/user.service\";\n\nexport default class Home extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      content: \"\"\n    };\n  }\n\n  componentDidMount() {\n    UserService.getPublicContent().then(\n      response => {\n        this.setState({\n          content: response.data\n        });\n      },\n      error => {\n        this.setState({\n          content:\n            (error.response && error.response.data) ||\n            error.message ||\n            error.toString()\n        });\n      }\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <header className=\"jumbotron\">\n          {/* <h3>{this.state.content}</h3> */}\n          <div>{parse(this.state.content)}</div>\n        </header>\n      </div>\n    );\n  }\n}","import React, { Component } from \"react\";\nimport { Redirect } from 'react-router-dom';\nimport { connect } from \"react-redux\";\nimport parse from \"html-react-parser\";\n\nclass Profile extends Component {\n\n  render() {\n    const { user: currentUser } = this.props;\n\n    if (!currentUser) {\n      return <Redirect to=\"/login\" />;\n    }\n\n    return (\n      <div className=\"container\">\n        <header className=\"jumbotron\">\n          <h3>\n            My Profile\n          </h3>\n        </header>\n        <p>\n          <strong>User:</strong> {currentUser.username}\n        </p>\n        <p>\n          <strong>Token:</strong> {currentUser.accessToken.substring(0, 20)} ...{\" \"}\n          {currentUser.accessToken.substr(currentUser.accessToken.length - 20)}\n        </p>\n        <p>\n          <strong>Id:</strong> {currentUser.id}\n        </p>\n        <p>\n          <strong>Email:</strong> {currentUser.email}\n        </p>\n        <strong>Authorities:</strong>\n        <ul>\n          {currentUser.roles &&\n            currentUser.roles.map((role, index) => <li key={index}>{role}</li>)}\n        </ul>\n        <p>\n          <strong>Pylbs:</strong> {currentUser.Pylbs}\n        </p>\n        <div>\n          <center><h1>latest Pylb</h1></center>\n          <table class=\"table\">\n            <tr><center><img src=\"/img/hotjar_logo.png\" class=\"company-logo\"/><img src=\"/img/plus.png\" class=\"plus-sign\"/><img src=\"/img/google_analytics.png\" class=\"company-logo\"/></center></tr>\n          </table>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  const { user } = state.auth;\n  return {\n    user,\n  };\n}\n\nexport default connect(mapStateToProps)(Profile);\n","import React, { Component } from \"react\";\n\nimport UserService from \"../services/user.service\";\n\nexport default class BoardUser extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      content: \"\"\n    };\n  }\n\n  componentDidMount() {\n    UserService.getUserBoard().then(\n      response => {\n        this.setState({\n          content: response.data\n        });\n      },\n      error => {\n        this.setState({\n          content:\n            (error.response &&\n              error.response.data &&\n              error.response.data.message) ||\n            error.message ||\n            error.toString()\n        });\n      }\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <header className=\"jumbotron\">\n          <h3>{this.state.content}</h3>\n        </header>\n      </div>\n    );\n  }\n}","import React, { Component } from \"react\";\n\nimport UserService from \"../services/user.service\";\n\nexport default class BoardUser extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      content: \"\"\n    };\n  }\n\n  componentDidMount() {\n    UserService.getModeratorBoard().then(\n      response => {\n        this.setState({\n          content: response.data\n        });\n      },\n      error => {\n        this.setState({\n          content:\n            (error.response &&\n              error.response.data &&\n              error.response.data.message) ||\n            error.message ||\n            error.toString()\n        });\n      }\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <header className=\"jumbotron\">\n          <h3>{this.state.content}</h3>\n        </header>\n      </div>\n    );\n  }\n}","import React, { Component } from \"react\";\n\nimport UserService from \"../services/user.service\";\n\nexport default class BoardUser extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      content: \"\"\n    };\n  }\n\n  componentDidMount() {\n    UserService.getAdminBoard().then(\n      response => {\n        this.setState({\n          content: response.data\n        });\n      },\n      error => {\n        this.setState({\n          content:\n            (error.response &&\n              error.response.data &&\n              error.response.data.message) ||\n            error.message ||\n            error.toString()\n        });\n      }\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <header className=\"jumbotron\">\n          <h3>{this.state.content}</h3>\n        </header>\n      </div>\n    );\n  }\n}","import { createBrowserHistory } from \"history\";\n\nexport const history = createBrowserHistory();","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { BrowserRouter, /*Router,*/ Switch, Route, Link } from \"react-router-dom\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\n\nimport Login from \"./components/login.component\";\nimport Register from \"./components/register.component\";\nimport Home from \"./components/home.component\";\nimport Profile from \"./components/profile.component\";\nimport BoardUser from \"./components/board-user.component\";\nimport BoardModerator from \"./components/board-moderator.component\";\nimport BoardAdmin from \"./components/board-admin.component\";\n\nimport { logout } from \"./actions/auth\";\nimport { clearMessage } from \"./actions/message\";\n\nimport { history } from './helpers/history';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.logOut = this.logOut.bind(this);\n\n    this.state = {\n      showModeratorBoard: false,\n      showAdminBoard: false,\n      currentUser: undefined,\n    };\n\n    history.listen((location) => {\n      props.dispatch(clearMessage()); // clear message when changing location\n    });\n  }\n\n  componentDidMount() {\n    const user = this.props.user;\n\n    if (user) {\n      this.setState({\n        currentUser: user,\n        showModeratorBoard: user.roles.includes(\"ROLE_MODERATOR\"),\n        showAdminBoard: user.roles.includes(\"ROLE_ADMIN\"),\n      });\n    }\n  }\n\n  logOut() {\n    this.props.dispatch(logout());\n  }\n\n  render() {\n    const { currentUser, showModeratorBoard, showAdminBoard } = this.state;\n\n    return (\n      <BrowserRouter history={history}>\n        <div>\n          <nav className=\"navbar navbar-expand navbar-dark bg-dark\">\n            <Link to={\"/\"} className=\"navbar-brand\">\n              Pylb\n            </Link>\n            <div className=\"navbar-nav mr-auto\">\n              <li className=\"nav-item\">\n                <Link to={\"/home\"} className=\"nav-link\">\n                  Home\n                </Link>\n              </li>\n\n              {showModeratorBoard && (\n                <li className=\"nav-item\">\n                  <Link to={\"/mod\"} className=\"nav-link\">\n                    Moderator Board\n                  </Link>\n                </li>\n              )}\n\n              {showAdminBoard && (\n                <li className=\"nav-item\">\n                  <Link to={\"/admin\"} className=\"nav-link\">\n                    Admin Board\n                  </Link>\n                </li>\n              )}\n\n              {currentUser && (\n                <li className=\"nav-item\">\n                  <Link to={\"/user\"} className=\"nav-link\">\n                    User\n                  </Link>\n                </li>\n              )}\n            </div>\n\n            {currentUser ? (\n              <div className=\"navbar-nav ml-auto\">\n                <li className=\"nav-item\">\n                  <Link to={\"/profile\"} className=\"nav-link\">\n                    {currentUser.username}\n                  </Link>\n                </li>\n                <li className=\"nav-item\">\n                  <a href=\"/login\" className=\"nav-link logout\" onClick={this.logOut}>\n                    Log Out\n                  </a>\n                </li>\n              </div>\n            ) : (\n              <div className=\"navbar-nav ml-auto\">\n                <li className=\"nav-item\">\n                  <Link to={\"/login\"} className=\"nav-link login\">\n                    Login\n                  </Link>\n                </li>\n\n                <li className=\"nav-item\">\n                  <Link to={\"/register\"} className=\"nav-link signup\">\n                    Sign Up\n                  </Link>\n                </li>\n              </div>\n            )}\n          </nav>\n\n          <div className=\"container mt-3\">\n            <Switch>\n              <Route exact path={[\"/\", \"/home\"]} component={Home} />\n              <Route exact path=\"/login\" component={Login} />\n              <Route exact path=\"/register\" component={Register} />\n              <Route exact path=\"/profile\" component={Profile} />\n              <Route path=\"/user\" component={BoardUser} />\n              <Route path=\"/mod\" component={BoardModerator} />\n              <Route path=\"/admin\" component={BoardAdmin} />\n            </Switch>\n          </div>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  const { user } = state.auth;\n  return {\n    user,\n  };\n}\n\nexport default connect(mapStateToProps)(App);\n","import { SET_MESSAGE, CLEAR_MESSAGE } from \"./types\";\n\nexport const setMessage = (message) => ({\n  type: SET_MESSAGE,\n  payload: message,\n});\n\nexport const clearMessage = () => ({\n  type: CLEAR_MESSAGE,\n});","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {\n    REGISTER_SUCCESS,\n    REGISTER_FAIL,\n    LOGIN_SUCCESS,\n    LOGIN_FAIL,\n    LOGOUT,\n  } from \"../actions/types\";\n  \n  const user = JSON.parse(localStorage.getItem(\"user\"));\n  \n  const initialState = user\n    ? { isLoggedIn: true, user }\n    : { isLoggedIn: false, user: null };\n  \n  export default function (state = initialState, action) {\n    const { type, payload } = action;\n  \n    switch (type) {\n      case REGISTER_SUCCESS:\n        return {\n          ...state,\n          isLoggedIn: false,\n        };\n      case REGISTER_FAIL:\n        return {\n          ...state,\n          isLoggedIn: false,\n        };\n      case LOGIN_SUCCESS:\n        return {\n          ...state,\n          isLoggedIn: true,\n          user: payload.user,\n        };\n      case LOGIN_FAIL:\n        return {\n          ...state,\n          isLoggedIn: false,\n          user: null,\n        };\n      case LOGOUT:\n        return {\n          ...state,\n          isLoggedIn: false,\n          user: null,\n        };\n      default:\n        return state;\n    }\n  }  ","import { SET_MESSAGE, CLEAR_MESSAGE } from \"../actions/types\";\n\nconst initialState = {};\n\nexport default function (state = initialState, action) {\n  const { type, payload } = action;\n\n  switch (type) {\n    case SET_MESSAGE:\n      return { message: payload };\n\n    case CLEAR_MESSAGE:\n      return { message: \"\" };\n\n    default:\n      return state;\n  }\n}","import { combineReducers } from \"redux\";\nimport auth from \"./auth\";\nimport message from \"./message\";\n\nexport default combineReducers({\n  auth,\n  message,\n});","import { createStore, applyMiddleware } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers\";\n\nconst middleware = [thunk];\n\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(applyMiddleware(...middleware))\n);\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport store from './store';\n\nReactDOM.render(\n  <Provider store={store}>\n  <React.StrictMode>\n    <App />\n  </React.StrictMode></Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}